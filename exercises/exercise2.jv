pipeline TreesPipeline {

    TreesExtractor
        -> TreesTextFileInterpreter
        -> TreesCSVInterpreter
        -> TreesTableInterpreter
        -> TreesLoader;

    block TreesExtractor oftype HttpExtractor {
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv";
    }

    block TreesTextFileInterpreter oftype TextFileInterpreter { }

    block TreesCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }
    block TreesTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "lfd_nr" oftype integer,
            "stadtteil" oftype TreesSelected,
            "standort" oftype text,
            "baumart_botanisch" oftype text,
            "id" oftype IdsSelected,
            "baumfamilie" oftype text,
        ];
    }

    block TreesLoader oftype SQLiteLoader {
        table: "trees";
        file: "./trees.sqlite";
    }
} 
// The pipeline is set up, every block is performing their task.

// Now adding User defined valueTypes 
valuetype TreesSelected oftype text {
    constraints: [
        OnlyVogelsang
    ];
}

valuetype IdsSelected oftype text {
    constraints: [
        validRegex
    ];
}

// The user defined valueTypes are defined and can be used as column type in TableInterpreter
// But the valueTypes still need to have constraints

constraint OnlyVogelsang on text: value == "Vogelsang" or value == "Vogelsang Bols-Siedlung";
constraint validRegex oftype RegexConstraint {
    regex: /^\d{1,3}\.\d+,\s*\d{1,3}\.\d+$/;
}

// These are the constraints asked to full file in exercise sheet.

