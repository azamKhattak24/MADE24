pipeline GTFSPipeline {
    GTFSExtractor
        -> GTFSArchiveInterpreter
        -> GTFSFilePicker
        -> GTFSTextFileInterpreter
        -> GTFSCSVInterpreter
        -> GTFSColumnDeleter
        -> GTFSTableInterpreter
        -> GTFSLoader;


    block GTFSExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block GTFSArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block GTFSFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    block GTFSTextFileInterpreter oftype TextFileInterpreter { }

    block GTFSCSVInterpreter oftype CSVInterpreter {
        delimiter: ',';
        enclosing: '"';
    }

    block GTFSColumnDeleter oftype ColumnDeleter {
        delete: [ column B, column D
        ];
    }

    block GTFSTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype stopName,
            "stop_lat" oftype cordinates,
            "stop_lon" oftype cordinates,
            "zone_id" oftype zoneid,
        ];
    }

    block GTFSLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }


    valuetype stopName oftype text {
        constraints: [
            validStopName
        ];
    }

    constraint validStopName on text: value matches /^[a-zA-ZäöüÄÖÜß\s./-]+$/;


    valuetype cordinates oftype decimal {
        constraints: [
            validCordinates,
        ];
    }

    constraint validCordinates oftype RangeConstraint {
        lowerBound: -90;
        upperBound: 90;
    }


    valuetype zoneid oftype integer {
        constraints: [
            validZoneId,
        ];
    }

    constraint validZoneId on integer: value == 1925;
}