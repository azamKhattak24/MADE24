pipeline CountryStatsPipeline {

    CountryStatsExtractor
        -> CountryStatsXLXSInterpreter
        -> CountryStatsSheetPicker
        -> CountryStatsDataSelector
        -> CountryStateNameHeaderWriter;

    CountryStateNameHeaderWriter
        -> CountryStatsCellsTableInterpreter
        -> CountryStatsCellsLoader;

    CountryStateNameHeaderWriter
        -> SecondCountryStatsCellsTableInterpreter
        -> SecondCountryStatsCellsLoader;



    block CountryStatsExtractor oftype HttpExtractor {
        url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
    }

    block CountryStatsXLXSInterpreter oftype XLSXInterpreter { }

    block CountryStatsSheetPicker oftype SheetPicker {
        sheetName: "Figure S5.1.2";
    }

    block CountryStatsDataSelector oftype CellRangeSelector {
        select: range P2:S45;
    }


    block CountryStateNameHeaderWriter oftype CellWriter {
        at: range A1:D1;
        write: [
            "Country Code",
            "Economy",
            "GDP per Capita",
            "Bond Issuance Share"
        ];
    }

    block CountryStatsCellsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeAlpha3,
            "Bond Issuance Share" oftype BIS
        ];
    }

    block CountryStatsCellsLoader oftype SQLiteLoader {
        table: "bondIssuance";
        file: "./country-stats.sqlite";
    }


    block SecondCountryStatsCellsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeAlpha3,
            "GDP per Capita" oftype GDP
        ];
    }

    block SecondCountryStatsCellsLoader oftype SQLiteLoader {
        table: "gdpPerCapita";
        file: "./country-stats.sqlite";
    }
} 
    valuetype BIS oftype text {
    constraints: [
        BIS_Valid,
        BIS_Length
    ];
}
   constraint BIS_Valid oftype RegexConstraint {
    regex: /^0(\.\d+)?|1(\.0+)?$/;
}
    constraint BIS_Length oftype LengthConstraint {
    minLength: 1;
}
// constraint NoZero oftype DenylistConstraint {
//     denylist: [
//         "0"
//     ];
// }

    valuetype GDP oftype text {
    constraints: [
        GDP_Valid,
        GDP_Length
    ];
}
    constraint GDP_Valid oftype RegexConstraint {
    regex: /^(?:0|[1-9]\d*)(\.\d+)?$/;
}

    constraint GDP_Length oftype LengthConstraint {
    minLength: 1;
}
